import requests
from bs4 import BeautifulSoup

class AvitoParser:
    def __init__(self):
        self.price_value = None
        self.full_address = None
        self.rooms = None
        self.total_area = None
        self.floor = None

    def _extract_param(self, params_soup, param_name):
        for li in params_soup.find_all('li', class_='params-paramsList__item-_2Y2O'):
            span = li.find('span', class_='styles-module-noAccent-l9CMS')
            if span and param_name in span.text:
                return span.next_sibling.strip()
        return "–ù–µ —É–∫–∞–∑–∞–Ω–æ"

    def parse(self, url):
        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º GET-–∑–∞–ø—Ä–æ—Å –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—É
        headers = {
            "User-Agent": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/91.0.4472.124 Safari/537.36"
        }
        response = requests.get(url, headers=headers)
        if response.status_code != 200:
            raise Exception(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ —Å—Ç—Ä–∞–Ω–∏—Ü—ã: {response.status_code}")

        # –ü–∞—Ä—Å–∏–º HTML
        soup = BeautifulSoup(response.text, 'html.parser')

        # –ò–∑–≤–ª–µ–∫–∞–µ–º —Ü–µ–Ω—É
        price_span = soup.find('span', {'itemprop': 'price'})
        self.price_value = price_span.get('content', '–ù–µ —É–∫–∞–∑–∞–Ω–æ') if price_span else '–ù–µ —É–∫–∞–∑–∞–Ω–æ'

        if params_block := soup.find(
            'div', {'data-marker': 'item-view/item-params'}
        ):
            self._extracted_from_parse_20(params_block)
        # –ò–∑–≤–ª–µ–∫–∞–µ–º –∞–¥—Ä–µ—Å
        address_element = soup.find('span', class_='style-item-address__string-wt61A')
        self.full_address = address_element.text.strip() if address_element else "–ù–µ —É–∫–∞–∑–∞–Ω–æ"

    # TODO Rename this here and in `parse`
    def _extracted_from_parse_20(self, params_block):
        params_soup = BeautifulSoup(params_block.decode_contents(), 'html.parser')
        self.rooms = self._extract_param(params_soup, "–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –∫–æ–º–Ω–∞—Ç")
        self.total_area = self._extract_param(params_soup, "–û–±—â–∞—è –ø–ª–æ—â–∞–¥—å")
        self.floor = self._extract_param(params_soup, "–≠—Ç–∞–∂")

        # –û—á–∏—â–∞–µ–º –¥–∞–Ω–Ω—ã–µ
        self.total_area = self.total_area.replace("\u00A0–º\u00B2", "").replace(" –º\u00B2", "")
        self.floor = self.floor.replace(" –∏–∑ ", "/")


if __name__ == "__main__":
    url = 'https://www.avito.ru/ekaterinburg/kvartiry/1-k._kvartira_406_m_69_et._4574477371?context=H4sIAAAAAAAA_wEmANn_YToxOntzOjE6IngiO3M6MTY6Ik9Ra1c5RzE3TUY5c0R2NW8iO32sRl6AJgAAAA'
    parser = AvitoParser()
    parser.parse(url)
    print(f"üìç {parser.full_address}")
    print(f"üíµ {parser.price_value}‚ÇΩ")
    print('')
    print(f"üö™ {parser.rooms}–∫–æ–º–Ω.")
    print(f"üìê {parser.total_area}–º¬≤")
    print(f"ü™ú {parser.floor}")